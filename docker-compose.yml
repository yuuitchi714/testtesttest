#iiiioooo
services:
  python-app:
    build: ./python
    #stdin_open: true
    #tty: true
    ports:
      - "5001:5000"
  php-app:
      build: 
        context: ./php
        dockerfile: Dockerfile # ここでDockerfileを指定
      ports:
        - "8080:80"
      volumes:
        - ./php/index.html:/var/www/html/index.html
        - ./php/index.php:/var/www/html/index.php
        #- /Users/ichi/path/to/your/project/php/apache2/httpd.conf:/etc/apache2/apache2.conf
        #- /Users/ichi/path/to/your/project/php/apache2/httpd.conf:/etc/sites-available/000-default.conf
        #- /Users/ichi/path/to/your/project/php/apache2/docker-php.conf2:
        #- /Users/ichi/path/to/your/project/php/apache2/docker-php.conf:/project/etc/apache2/conf-available/docker-php.conf
        - /Users/ichi/path/to/your/project/php/apache2/apache2.conf:/etc/apache2/apache2.conf
        #- /Users/ichi/path/to/your/project/php/apache2/dir.conf:/mods-
        #docker-php.conf
      depends_on:
       python-app:
        condition: service_started
#       version: "3.8"
# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile-php
#     ports:
#       - "8080:80"
#     volumes:
#       - .:/var/www/html
#     depends_on:
#       - db
#     environment:
#       MYSQL_ROOT_PASSWORD: password
#       MYSQL_DATABASE: mydatabase
#       MYSQL_USER: myuser
#       MYSQL_PASSWORD: userpassword
#   db:
#     image: mysql:5.7
#     ports:
#       - "3306:3306"
#     environment:
#       MYSQL_ROOT_PASSWORD: password
#       MYSQL_DATABASE: mydatabase
#       MYSQL_USER: myuser
#       MYSQL_PASSWORD: userpassword
#     volumes:
#       - mysql-data:/var/lib/mysql
#   python-app:
#     build:
#       context: ./python
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000"  # 例: Flaskアプリが5000ポートで動作する場合
#     volumes:
#       - ./python:/app
#     depends_on:
#       - db

# volumes:
#   mysql-data: